@page "/"
@using BK9K.Framework.Grids
@using BK9K.Framework.Units
@using BK9K.Framework.Extensions
@using System.Reactive.Linq
@using System
@using BK9K.Framework.Transforms
@using BK9K.Game

@implements IDisposable

@inject GridBuilder GridBuilder
@inject UnitBuilder UnitBuilder

<div>
    <p class="title">BATTLE GRID</p>
    @for (var y = 0; y < Game.Grid.YSize; y++)
    {
        <div class="columns">
        @for (var x = 0; x < Game.Grid.XSize; x++)
        {
            <div class="is-flex column has-background-dark is-relative">
                <span class="grid-tag tag is-info">Pos [@x,@y]</span>
                @{
                    var possibleUnit = Game.GetUnitAt(new Position(x, y));
                    if (possibleUnit != null)
                    {
                        <UnitAvatar Unit="possibleUnit"/>
                    }
                }
            </div>
        }
        </div>
    }
</div>

@code
{
    public GameBootstrap Game;
    private IDisposable _gameUpdateSub;

    protected override void OnInitialized()
    {
        Game = new GameBootstrap();
        Game.StartGame();

        _gameUpdateSub = Game.OnUpdated.Subscribe(unit => StateHasChanged());

        base.OnInitialized();
    }

    public void Dispose()
    {
        Game?.Dispose();
        _gameUpdateSub?.Dispose();
    }
}
