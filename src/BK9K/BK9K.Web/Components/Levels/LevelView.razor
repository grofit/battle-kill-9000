@using BK9K.Framework.Transforms
@using BK9K.Game
@using BK9K.Framework.Extensions
@using BK9K.Framework.Units

<div>
    @for (var y = 0; y < World.Grid.YSize; y++)
    {
        <div>
            @for (var x = 0; x < World.Grid.XSize; x++)
            {
                <div class="ground-tile is-relative">
                    <span class="grid-tag tag is-info">Pos [@x,@y]</span>
                    @{
                        var possibleUnit = World.GetUnitAt(new Position(x, y));
                        if (possibleUnit != null && !possibleUnit.IsDead())
                        {
                            <UnitAvatarView Unit="possibleUnit" OnUnitClick=@OnUnitClicked />
                        }
                    }
                </div>
            }
        </div>
    }
</div>

@code {

    [Parameter]
    public EventCallback<Unit> OnUnitSelected { get; set; }

    [Parameter]
    public World World { get; set; }

    public async Task OnUnitClicked(Unit unit)
    {
        await OnUnitSelected.InvokeAsync(unit);
    }
}